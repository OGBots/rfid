To store new data (Unique ID, Name, Class, Roll No., Phone No.) on new RFID tags using an ESP8266, follow these steps:

1. Hardware Setup
Ensure your hardware is set up correctly:

Components Needed:

ESP8266 (e.g., NodeMCU or Wemos D1 Mini)
MFRC522 RFID Reader/Writer Module
RFID Tags/Cards
Jumper Wires
Connections:

MFRC522 RFID Module to ESP8266:

SDA to D4 (GPIO 2)
SCK to D5 (GPIO 14)
MOSI to D7 (GPIO 13)
MISO to D6 (GPIO 12)
RST to D3 (GPIO 0)
3.3V to 3.3V on ESP8266
GND to GND on ESP8266
Ensure the RFID module is connected to the ESP8266 properly and that all components are compatible with 3.3V.

2. Install Required Libraries
1. Install the MFRC522 Library:

Open Arduino IDE.
Go to Sketch -> Include Library -> Manage Libraries.
Search for and install the MFRC522 library.
2. Install the ESP8266 Board Package:

Open Arduino IDE.
Go to File -> Preferences.
Add http://arduino.esp8266.com/stable/package_esp8266com_index.json to the Additional Boards Manager URLs field.
Go to Tools -> Board -> Boards Manager.
Search for "esp8266" and install the package.
3. Write Code to Store Data on RFID Tags
1. Create a new Arduino sketch.

2. Copy and paste the following code to write new data to an RFID tag:
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include <SPI.h>
#include <MFRC522.h>

#define RST_PIN D3
#define SS_PIN D4

MFRC522 mfrc522(SS_PIN, RST_PIN);

void setup() {
  Serial.begin(115200);  // Use a higher baud rate for ESP8266
  SPI.begin();
  mfrc522.PCD_Init();
  Serial.println("Scan a RFID tag to write new data.");
}

void loop() {
  if (!mfrc522.PICC_IsNewCardPresent()) {
    return;
  }

  if (!mfrc522.PICC_ReadCardSerial()) {
    return;
  }

  // Define new data to store
  String uniqueId = "123456";  // Example Unique ID
  String name = "John Doe";    // Example Name
  String className = "10";     // Example Class
  String rollNo = "56";        // Example Roll No
  String phoneNo = "1234567890";  // Example Phone No
  
  // Prepare data to be written
  String combinedData = uniqueId + "," + name + "," + className + "," + rollNo + "," + phoneNo;
  combinedData = combinedData.substring(0, 16); // Truncate or pad to 16 characters
  
  byte data[16];
  for (int i = 0; i < 16; i++) {
    data[i] = combinedData[i];
  }

  // Write data to block 4 of the RFID tag
  MFRC522::StatusCode status = mfrc522.MIFARE_Write(4, data, 16);

  if (status == MFRC522::STATUS_OK) {
    Serial.println("Data written successfully!");
  } else {
    Serial.print("Write failed: ");
    Serial.println(mfrc522.GetStatusCodeName(status));
  }

  delay(1000); // Wait before next operation
}
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Explanation:

Initialization: The setup() function initializes the RFID reader and prepares serial communication.
Data Preparation: In the loop() function, the data is formatted into a 16-byte string.
Writing Data: The MIFARE_Write function writes the data to block 4 of the RFID tag.
3. Upload the Code:

Connect the ESP8266 to your computer via USB.
Select the correct board and port in Tools -> Board and Tools -> Port.
Click the Upload button to upload the code to the ESP8266.
4. Write Data to RFID Tags
Power up the ESP8266 and ensure the MFRC522 module is properly connected.
Open the Serial Monitor in the Arduino IDE (set baud rate to 115200).
Scan a new RFID tag with the RFID reader.
The new data (Unique ID, Name, Class, Roll Number, Phone Number) will be written to the tag.
